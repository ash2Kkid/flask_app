name: Build & Deploy Pipeline

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      ecr_registry: ${{ steps.ecr_login.outputs.registry }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE_ARN }}
        role-session-name: GitHubActions-Build
        aws-region: ${{ env.AWS_REGION }}

    - name: ECR Login
      id: ecr_login
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build & Push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile
        tags: ${{ steps.ecr_login.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ secrets.AWS_DEPLOYMENT_ROLE_ARN }}
        role-session-name: GitHubActions-Deploy
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to EC2
      env:
        SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_KEY" > ~/.ssh/tmp_key
        chmod 600 ~/.ssh/tmp_key
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/tmp_key \
          ec2-user@$HOST /bin/bash << 'ENDDEPLOY'
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login \
              -u AWS --password-stdin ${{ needs.build.outputs.ecr_registry }}
            docker pull ${{ needs.build.outputs.ecr_registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
            docker ps -q --filter name=app | xargs -r docker stop
            docker rm app || true
            docker run -d --restart always \
              -p 80:5000 \
              --name app \
              ${{ needs.build.outputs.ecr_registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        ENDDEPLOY
